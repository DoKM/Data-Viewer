version: "3"
services:
  backend:
    build: backend/
    ports:
      - "3000:3000"
    depends_on:
      # - postgres
      # - elasticsearch
      - mongo
      # - redis
      # - zero
      # - alpha
    links:
      # - postgres
      # - elasticsearch
      - mongo
      # - redis
      # - zero
      # - alpha
  frontend:
    build: frontend/
    ports:
      - "8080:80"
    links:
      - backend
  # zero:
  #   image: dgraph/dgraph:latest
  #   volumes:
  #     - /tmp/data:/dgraph
  #   ports:
  #     - 5080:5080
  #     - 6080:6080
  #   restart: on-failure
  #   command: dgraph zero --my=zero:5080
  # alpha:
  #   image: dgraph/dgraph:latest
  #   volumes:
  #     - /tmp/data:/dgraph
  #   ports:
  #     - 8080:8080
  #     - 9080:9080
  #   restart: on-failure
  #   command: dgraph alpha --my=alpha:7080 --zero=zero:5080
  mongo:
    hostname: mongo
    image: mongo
    ports:
      - "27017:27017"
  # redis:
  #   hostname: redis
  #   image: redis:6.0.6-alpine
  #   ports:
  #     - "6379:6379"
  # elasticsearch:
  #   hostname: elasticsearch
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.8.1
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"
  #   environment:
  #     - discovery.type=single-node
  # postgres:
  #   image: postgres:10-alpine
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     - POSTGRES_USER=node
  #     - POSTGRES_PASSWORD=password
  #     - POSTGRES_DB=books
